import vk_api
from bs4 import BeautifulSoup
import requests
import re
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType
from vk_api.utils import get_random_id
from vk_api.keyboard import VkKeyboard, VkKeyboardColor
from datetime import datetime, timedelta

# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
vk_session = vk_api.VkApi(token= '') #–≤–≤–µ—Å—Ç–∏ —Ç–æ–∫–µ–Ω
group_id = #–Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã
longpoll = VkBotLongPoll(vk_session,group_id)
vk = vk_session.get_api()
# –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏
keyboard = VkKeyboard(one_time=False)
keyboard.add_button('–°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ –¥–ª—è –∞–Ω–æ–Ω—Å–∞', color=VkKeyboardColor.PRIMARY)
keyboard.add_button('–ü–æ–¥—Å—á—ë—Ç –ø–æ—Ä—Ü–∏–π,–∑–∞–∫—É–ø–∞–µ–º—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤,–≤–æ–¥—ã', color=VkKeyboardColor.POSITIVE)
keyboard.add_line()  # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫
keyboard.add_button('–°—Å—ã–ª–∫–∞ –Ω–∞ –æ—Ñ–ª–∞–π–Ω –∫–∞—Ä—Ç—ã', color=VkKeyboardColor.NEGATIVE)
keyboard.add_button('–ö–Ω–æ–ø–∫–∞ 4', color=VkKeyboardColor.NEGATIVE)

def send_message(peer_id, message):
    vk.messages.send(
        peer_id=peer_id,
        message=message,
        random_id=get_random_id(),
    )
# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞—Ç—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def kick(from_id,peer_id,message):
    response = requests.get('https://vk.com/foaf.php?id=' + from_id)
    xml = response.text
    soup = BeautifulSoup(xml, 'lxml')
    created = soup.find('ya:created').get('dc:date')
    c_split = re.split('-|:|T', created)
    print(c_split)
    year = int(c_split[0])
    mouth = int(c_split[1])
    day = int(c_split[2])
    print(year)
    print(mouth)
    print(day)
    current_date = str(datetime.now())
    print(current_date)
    current_date_splt = re.split('-|:| ', current_date)
    year_cur = int(current_date_splt[0])
    mouth_cur = int(current_date_splt[1])
    day_cur = int(current_date_splt[2])
    print(year_cur)
    print(mouth_cur)
    print(day_cur)
    print(peer_id)
    print(peer_id)
    if year_cur-year == 0:
        if mouth_cur-mouth == 0:
            if day_cur-day < 7:
                if peer_id != int(from_id):
                    vk_session.method('messages.removeChatUser', {'user_id': from_id, 'chat_id': peer_id - 2000000000})
                else:
                    print('—Ä–æ–≤–Ω—è–µ—Ç—Å—è')
            else:
                print("–í—Å—ë –æ–∫")
        else:
            print("–í—Å—ë –æ–∫")
    else:
        print("–í—Å—ë –æ–∫")


# –æ—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –±–æ—Ç–∞


# –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
#
#
def podshet(user_id):
    send_message(user_id, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ –ø—Ä–æ–ø–∏—Ç–∞–Ω–∏—è.")
    send_message(user_id, "–û—Ç–ø—Ä–∞–≤—Ç–µ —Å–µ–π—á–∞—Å –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.")
    for event in longpoll.listen():
        if event.type == VkBotEventType.MESSAGE_NEW:
            send_message(user_id, "–ù–∞–ø–∏—à–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª—é–¥–µ–π(—Å —É—Ç–æ—á–Ω–µ–Ω–∏–µ–º –º—É–∂—á–∏–Ω–∞-–∂–µ–Ω—â–∏–Ω–∞):")
            for event in longpoll.listen():
                if event.type == VkBotEventType.MESSAGE_NEW:
                    people = event.message.text
                    send_message(user_id, "–ö–æ–ª–∏—á–µ—Ç—Å–≤–æ –ª—é–¥–µ–π –∑–∞–ø–∏—Å–∞–Ω–æ.")

                    send_message(user_id, "–ù–∞–ø–∏—à–∏ –∏–∑ —ç—Ç–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Å–µ—è–¥–Ω—ã—Ö –∏ –≤–µ–≥–∞–Ω–æ–≤:")

                    for event in longpoll.listen():
                        if event.type == VkBotEventType.MESSAGE_NEW:
                            veg_vsead = event.message.text
                            send_message(user_id, "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–∞–Ω–æ.")

                            send_message(user_id, "–ù–∞–ø–∏—à–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π")

                            for event in longpoll.listen():
                                if event.type == VkBotEventType.MESSAGE_NEW:
                                    days = event.message.text
                                    send_message(user_id, "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –∑–∞–ø–∏—Å–∞–Ω–æ.")

                                    send_message(user_id, "–ù–∞–ø–∏—à–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ —Ä–æ–¥–Ω–∏–∫–æ–≤ –∏ –¥—Ä—É–≥–∏—Ö —Å–ø–æ—Å–æ–±–æ–≤ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –≤–æ–¥—ã(–æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—ã, –µ—Å–ª–∏ –≤—ã —Å–∞–º–∏ –±—É–¥–µ—Ç–µ –ø–æ–ø–æ–ª–Ω—è—Ç—å –≤–æ–¥—É, –Ω–∞–ø–∏—à–∏—Ç–µ —ç—Ç–æ)")

                                    for event in longpoll.listen():
                                        if event.type == VkBotEventType.MESSAGE_NEW:
                                            voda = event.message.text
                                            send_message(user_id, "–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –≤–æ–¥—ã –∑–∞–ø–∏—Å–∞–Ω–æ.")

                                            send_message(user_id, f"üë´ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª—é–¥–µ–π: {people}\n" \
                                                                  f"üçÄüêî –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–µ–≥–∞—Ç–µ—Ä–∏–∞–Ω—Ü–æ–≤ –∏ –≤—Å–µ—è–¥–Ω—ã—Ö: {veg_vsead}\n" \
                                                                  f"‚è≥ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π: {days}\n" \
                                                                  f"üíß –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –≤–æ–¥—ã: {voda}")
                                            return


def start_dialog(user_id):
    send_message(user_id, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–∞ –∞–Ω–æ–Ω—Å–∞.")
    send_message(user_id, "–û—Ç–ø—Ä–∞–≤—Ç–µ —Å–µ–π—á–∞—Å –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.")
    for event in longpoll.listen():
        if event.type == VkBotEventType.MESSAGE_NEW:
                send_message(user_id, "–ù–∞–ø–∏—à–∏ –º–µ—Å—Ç–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ:")
                for event in longpoll.listen():
                    if event.type == VkBotEventType.MESSAGE_NEW:
                        dest = event.message.text
                        send_message(user_id, "–ú–µ—Å—Ç–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∞–Ω.")

                        send_message(user_id, "–ù–∞–ø–∏—à–∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ—Ö–æ–¥–∞:")

                        for event in longpoll.listen():
                            if event.type == VkBotEventType.MESSAGE_NEW:
                                duration = event.message.text
                                send_message(user_id, "–î–∞—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –∑–∞–ø–∏—Å–∞–Ω–∞.")

                                send_message(user_id, "–ù–∞–ø–∏—à–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç—å –º–∞—Ä—à—Ä—É—Ç–∞" )

                                for event in longpoll.listen():
                                    if event.type == VkBotEventType.MESSAGE_NEW:
                                        difficulty = event.message.text
                                        send_message(user_id, "–°–ª–æ–∂–Ω–æ—Å—Ç—å –º–∞—Ä—à—Ä—É—Ç–∞ –∑–∞–ø–∏—Å–∞–Ω–∞.")

                                        send_message(user_id, "–ù–∞–ø–∏—à–∏ –Ω–∞ —á—ë–º –≤—ã –ø–æ–µ–¥–µ—Ç–µ")

                                        for event in longpoll.listen():
                                            if event.type == VkBotEventType.MESSAGE_NEW:
                                                transportation = event.message.text
                                                send_message(user_id, "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç –∑–∞–ø–∏—Å–∞–Ω.")

                                                send_message(user_id, "–ù–∞–ø–∏—à–∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–µ–∑–¥–∞ —Ç—É–¥–∞ –∏ –æ–±—Ä–∞—Ç–Ω–æ")

                                                for event in longpoll.listen():
                                                    if event.type == VkBotEventType.MESSAGE_NEW:
                                                        cost = event.message.text
                                                        send_message(user_id, "–°—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–ø–∏—Å–∞–Ω–∞.")

                                                        send_message(user_id, "–ù–∞–ø–∏—à–∏ –º–µ—Å—Ç–æ –∏ –≤—Ä–µ–º—è —Å–±–æ—Ä–∞")
                                                        for event in longpoll.listen():
                                                            if event.type == VkBotEventType.MESSAGE_NEW:
                                                                gathering_time_location = event.message.text
                                                                send_message(user_id, "–ú–µ—Å—Ç–æ –∏ –≤—Ä–µ–º—è —Å–±–æ—Ä–∞ –∑–∞–ø–∏—Å–∞–Ω—ã.")

                                                                send_message(user_id, "–ù–∞–ø–∏—à–∏ –≥—É–≥–ª —Ñ–æ—Ä–º—É –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –¥–ª—è –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")
                                                                for event in longpoll.listen():
                                                                    if event.type == VkBotEventType.MESSAGE_NEW:
                                                                        google_form_link = event.message.text
                                                                        send_message(user_id,
                                                                                     "–≥—É–≥–ª —Ñ–æ—Ä–º–∞ –∑–∞–ø–∏—Å–∞–Ω–∞.")

                                                                        send_message(user_id, f"üåç –ú–µ—Å—Ç–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è: {dest}\n" \
                                                                                                                               f"‚è≥ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {duration}\n" \
                                                                                                                               f"üìà –°–ª–æ–∂–Ω–æ—Å—Ç—å: {difficulty}\n" \
                                                                                                                               f"üöó –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç: {transportation}\n" \
                                                                                                                               f"üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–µ–∑–¥–∞ —Ç—É–¥–∞ –∏ –æ–±—Ä–∞—Ç–Ω–æ: {cost}\n" \
                                                                                                                               f"üïí –ú–µ—Å—Ç–æ –∏ –≤—Ä–µ–º—è —Å–±–æ—Ä–∞: {gathering_time_location}\n" \
                                                                                                                               f"üìã –ë–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: {google_form_link}")
                                                                        return
# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π
for event in longpoll.listen():
    if event.type == VkBotEventType.MESSAGE_NEW:
        from_id = str(event.message.from_id)  # id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ
        peer_id = event.message.peer_id  # peer_id –±–µ—Å–µ–¥—ã –∏–ª–∏ –õ–°, –æ—Ç–∫—É–¥–∞ –ø—Ä–∏—à–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
        message = event.message.text
        print(from_id)
        print(peer_id)
        print(message)
        kick(from_id, peer_id, message)
        if event.message.text.lower() == '–ø—Ä–∏–≤–µ—Ç' and event.from_user:
            vk.messages.send(peer_id=peer_id,message=message,random_id=get_random_id(), keyboard=keyboard.get_keyboard())
        elif event.message.text.lower() == '—Å–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ –¥–ª—è –∞–Ω–æ–Ω—Å–∞' and event.from_user:
            start_dialog(from_id)
        elif event.message.text.lower() == '–ø–æ–¥—Å—á—ë—Ç –ø–æ—Ä—Ü–∏–π,–∑–∞–∫—É–ø–∞–µ–º—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤,–≤–æ–¥—ã' and event.from_user:
            podshet(from_id)
        elif event.message.text.lower() == '—Å—Å—ã–ª–∫–∞ –Ω–∞ –æ—Ñ–ª–∞–π–Ω –∫–∞—Ä—Ç—ã' and event.from_user:
            vk.messages.send(from_id=from_id,peer_id=peer_id,message="Maps.me",random_id=get_random_id(),keyboard=keyboard.get_keyboard())
        elif event.message.text.lower() == '–∫–Ω–æ–ø–∫–∞ 4' and event.from_user:
            vk.messages.send(from_id=from_id,peer_id=peer_id,message=message,random_id=get_random_id(),keyboard=keyboard.get_keyboard())